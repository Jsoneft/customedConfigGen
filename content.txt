//
// Created by Jason.Z on 2020/10/20.
//

#include <bits/stdc++.h>

using namespace std;
#define local
#ifdef local

template<class T>
void _E(T x) { cerr << x; }

void _E(double x) { cerr << fixed << setprecision(6) << x; }

void _E(string s) { cerr << "\"" << s << "\""; }

template<class A, class B>
void _E(pair <A, B> x) {
    cerr << '(';
    _E(x.first);
    cerr << ", ";
    _E(x.second);
    cerr << ")";
}

template<class T>
void _E(vector<T> x) {
    cerr << "[";
    for (auto it = x.begin(); it != x.end(); ++it) {
        if (it != x.begin()) cerr << ", ";
        _E(*it);
    }
    cerr << "]";
}


template<class T>
void _E(deque<T> x) {
    cerr << "[";
    for (auto it = x.begin(); it != x.end(); ++it) {
        if (it != x.begin()) cerr << ", ";
        _E(*it);
    }
    cerr << "]";
}

void ERR() {}

template<class A, class... B>
void ERR(A x, B... y) {
    _E(x);
    cerr << (sizeof...(y) ? ", " : " ");
    ERR(y...);
}

#define debug(x...) do { cerr << "{ "#x" } -> { "; ERR(x); cerr << "}" << endl; } while(false)
#else
#define debug(...) 114514.1919810
#endif
#define _rep(i, a, b) for (ll i = (a); i <= (b); ++i)
#define _rev(i, a, b) for (ll i = (a); i >= (b); --i)
#define _for(i, a, b) for (ll i = (a); i < (b); ++i)
#define _rof(i, a, b) for (ll i = (a); i > (b); --i)
#define oo 0x3f3f3f3f3f3f3f
#define ll long long
#define db long double
#define eps 1e-3
#define bin(x) cerr << bitset<10>(x) << endl
#define what_is(x) cerr << #x << " is " << x << endl
#define met(a, b) memset(a, b, sizeof(a))
#define all(x) x.begin(), x.end()
#define pii pair<ll, ll>
#define pdd pair<db, db>
#define endl "\n"

#define CASET ll _; cin >> _; for(ll cs=1;cs<=_;cs++)
ll mod = 1e9 + 7;
const ll maxn = 2e5 + 10;
const db pi = acos(-1.0);

ll qpow(ll a, ll b) {
    ll ret = 1;
    for (; b; a = a * a % mod, b >>= 1) {
        if (b & 1) {
            ret = ret * a % mod;
        }
    }
    return ret;
}

vector<ll> f(maxn), invf(maxn);

ll inv(ll a) {
    return qpow(a, mod - 2);
}

void prework() {
    f[0] = 1;
    _rep(i, 1, maxn - 1) {
        f[i] = f[i - 1] * i % mod;
    }
    invf[maxn - 1] = qpow(f[maxn - 1], mod - 2);
    for (ll i = maxn - 2; i >= 0; i--) {
        invf[i] = invf[i + 1] * (i + 1) % mod;
    }
}

ll C(ll n, ll m) {
    if (n > m || m < 0)return 0;
    if (n == 0 || m == n) return 1;
    ll res = (f[m] * invf[m - n] % mod * invf[n]) % mod;
    return res;
}

ll v[maxn], prime[maxn];
ll m = 0;

void sieve(ll N) {
    memset(v, 0, sizeof(v));
    _rep(i, 2, N) {
        if (v[i] == 0) {
            v[i] = i;
            prime[++m] = i;
        }
        _rep(j, 1, m) {
            if (prime[j] > v[i] || prime[j] > N / i)
                break;
            v[i * prime[j]] = prime[j];
        }
    }
}

template<typename T>
inline void read(T &a) {
    char c = getchar();
    T x = 0, f = 1;
    while (!isdigit(c)) {
        if (c == '-')f = -1;
        c = getchar();
    }
    while (isdigit(c)) {
        x = (x << 1) + (x << 3) + c - '0';
        c = getchar();
    }
    a = f * x;
}

ll par(vector<ll> &a, ll l, ll r) {
    ll x = a[l];
    while (l < r) {
        while (l < r && a[r] >= x) {
            r--;
        }
        a[l] = a[r];
        while (l < r && a[l] <= x) {
            l++;
        }
        a[r] = a[l];
    }
    a[l] = x;
    return l;
}


vector<ll> g, l, r;

ll getId(ll x) {
    ll xx = lower_bound(all(g), x) - g.begin() + 1;
    return xx;
}

ll e_gcd(ll a, ll b, ll &x, ll &y) {
    if (!b) {
        x = 1;
        y = 0;
        return a;
    }
    ll gcd = e_gcd(b, a % b, y, x);
    y -= a / b * x;
    return gcd;
}

ll cal(ll a, ll b, ll c) {
    ll x, y;
    ll gcd = e_gcd(a, b, x, y);
    if (c % gcd) return -1;
    x *= c / gcd;
    b /= gcd;
    if (b < 0) b = -b;
    ll ans = x % b;
    while (ans <= 0) ans += b;
    debug(x, y);
    return ans;
}

signed main(){
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
}